
@import "application";
@import "epg";

// ******************************
// Define variables for the scss
// ******************************

// A row in the main grid has a height and a space below.

// left right arrow styles
  // Within the bar the text is positioned vertically.
  $leftRightArrowTop: 30%;
// end left right arrow styles

// Event styles
  // The text in the main grid has a line height to position it correctly.
  $eventLineHeight: _ff($phone: 24px, $tablet: 24px);
  $eventFontSize: _ff($phone: $_app_small_font_size, $tablet: $_app_font_size);
  $eventPadding : 6px;
  $eventBorderRight : 2px solid $_epg_eventBorderColor;

  // the top for small events when showing the i or padlock
  $smallEventTop : _ff($phone: 15px, $tablet: 18px);
// End event styles

// Now bar styles
  //The now bar shows the current time
  $nowBarWidth : 2px;
// End Now bar styles

// Up and down arrow styles
  $chanArrowsHeight : _ff($phone: $_epg_rowHeight, $tablet: $_epg_rowHeight);
  $chanArrowsBottom : 12px;
// End up and down arrow styles

//Now and next styles
  $_channelBarNowNextTotalWidth: $_epg_channelBarTotalWidth - $_epg_leftRightArrowWidth;
  $scroller_container_epg_nownext_left: $_channelBarNowNextTotalWidth;
  $chan_arrows_bottom_mmc_displayed: $_epg_mmc_height;
// End now and next styles

// The position of the main epg scroller
  $scroller_container_epg_left: $_epg_channelBarTotalWidth;

// ******************************
// Define css classes
// ******************************

.export-to-javascript {
	pixelsPerHour: $_epg_pixelsPerHour;
}

.epg-top-bar {
	background-color: $_epg_topBarBgColor;
	height: $_epg_topBarHeight;
}

.epg-screen {
	filter:none;
	background: $_epg_screenBgColor;
	top: $_app_screen_top;
	bottom: 0;
	padding: 0;
}

.epg-scroller-container-epg {
  left: $scroller_container_epg_left;
  top: $_epg_topTotalHeight;
	bottom: 0;
	overflow: hidden;
	position: absolute;
	right: 0;

}

.epg-scroller-container-epg.nownext {
  left: $scroller_container_epg_nownext_left;
  top: $_epg_fixed_elements_height;
}

.epg-previous-channel-arrow.display,
.epg-next-channel-arrow.display {
	visibility: visible !important;
}

.epg-previous-arrow.display,
.epg-next-arrow.display {
  @if $_form_factor == desktop {
    -webkit-transition: text-shadow .15s ease-out, opacity .15s ease-out, background-color .15s ease-out;
  }
  opacity: 1;
	visibility: visible !important;
}

.epg-previous-arrow:before,
.epg-next-arrow:before {
  height: $leftRightArrowTop;
	content: '';
	display: inline-block;
	vertical-align: middle;
}

.epg-active-element {
	background-color: $_epg_activeElementBgColor !important;
}

.epg-active-npvr-element {
  background-color: $_epg_activeNpvrElementBgColor !important;
}

.epg-chan-arrows-previous {
  height : $chanArrowsHeight;
	cursor: pointer;
	position: absolute;
	text-align: center;
	visibility: hidden;
	width: 100%;
	&:active {
    background-color: $_epg_activeElementBgColor;
  }
  color: $_epg_navigateColor;
}

.epg-chan-arrows-next {
  height : $chanArrowsHeight;
  cursor: pointer;
  position: absolute;
  text-align: center;
  visibility: hidden;
  width: 100%;
  bottom: $chanArrowsBottom;
  &:active {
    background-color: $_epg_activeElementBgColor;
  }
  color: $_epg_navigateColor;
}

.epg-chan-arrows-next-mmc-displayed {
	height : $chanArrowsHeight;
  bottom: $chan_arrows_bottom_mmc_displayed;
  cursor: pointer;
  position: absolute;
  text-align: center;
  visibility: hidden;
  width: 100%;
  &:active {
    background-color: $_epg_activeElementBgColor;
  }
  color: $_epg_navigateColor;
}

.epg-grid {
	margin-left: $_epg_leftRightArrowWidth;
}

.epg-event {
	@include app_ellide;
	background-color: $_epg_eventBgColor;
	height: $_epg_rowHeight;
	line-height: $eventLineHeight;
	padding: $eventPadding;
	font-size: $eventFontSize;
	border-right: $eventBorderRight;
	cursor: pointer;
	overflow: hidden;
	position: absolute;
	@if $_form_factor == desktop{
	 &:hover {
	   background-color: $_epg_midHoverColor;
	 }
	 @include _vendor_prefix(transition, background-color .15s ease-out);
	}
}

.epg-event.blockedEvent {
  background-color: $_epg_blockedColor !important;
}

// When an event is too small for text, put an icon there
.epg-event.smallEvent {
  text-align: center;
  padding: $smallEventTop 0px 0px 0px;

}

// Too small even for an icon
.epg-event.tinyEvent {
  padding: 0px;
}

.epg-grid .recording-event {
  background-color: $_epg_recordingColor;
  color: $_epg_nowEventFontColor;
  @if $_form_factor == desktop{
    &:hover{
      background-color: $_epg_recording_highlight_color;
    }
  }
}

.epg-grid .catchup-event {
  background-color: $_epg_catchupColor;
  color: $_epg_catchupFontColor;
  @if $_form_factor == desktop{
    &:hover{
      background-color: $_epg_catchup_highlight_color;
    }
  }
}

.epg-grid .scheduled-event {
  background-color: red;
  color: $_epg_nowEventFontColor;
  @if $_form_factor == desktop{
    &:hover{
      background-color: $_epg_recording_highlight_color;
    }
  }
}

.epg-grid .now-event {
	background-color: $_epg_nowEvent;
	color: $_epg_nowEventFontColor;
	@if $_form_factor == desktop{
  	&:hover{
      background-color: $_epg_highHoverColor;
  	}
  }
}

.epg-grid .unsubscribed-event {
  background-color: $_epg_unSubscribedEventItemBgColor;
  color: $_epg_unSubscribedEventItemTextColor;
  @if $_form_factor == desktop{
   &:hover {
     background-color: $_epg_highHoverColor;
   }
  }
}

.epg-grid .now-bar {
  @include box_shadow;
	background-color: $_epg_nowBarBgColor;
	width: $nowBarWidth;
	position: absolute;
}

.epg-scroll-arrows {
  display: _ff($phone: none, $tablet: none, $desktop: block);
  width: $_epg_leftRightArrowWidth;
  font-size: $eventFontSize;
  cursor: pointer;
  height: 100%;
  position: absolute;
  text-align: center;
  visibility: hidden;
  top:0;
  /*background-color: $_epg_ScrollArrowsBgColor;*/
  @if $_form_factor == desktop{
      &:hover {
        text-shadow: 0 0 10px white;
        background-color: $_epg_ScrollArrowsHoverBgColor;
    }
  }
}

.epg-arrows {
  width: $_epg_leftRightArrowWidth;
  font-size: $eventFontSize;
	cursor: pointer;
	height: 100%;
	position: absolute;
	text-align: center;
	visibility: hidden;
	top:0;
	@if $_form_factor == desktop{
  	&:hover {
      text-shadow: 0 0 10px white;
      background-color: $_epg_ArrowsBgColor;
  	}
  }
  &:active {
    background-color: $_epg_activeElementBgColor;
  }
  color: $_epg_navigateColor;
}
